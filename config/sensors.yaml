################################################################################
#
#SENSOR
#
#################################################################################
  # - platform: yr

  #system monitor on to know disk use , memory use,process use  etc...
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /home
      - type: memory_use_percent
      - type: processor_use
      - type: since_last_boot
  #To monitor DataBase File size    
  - platform: filesize
    file_paths:
      - /config/home-assistant_v2.db
      #- /home/homeassistant/.homeassistant/home-assistant_v2.db
  #To monitor BackUp Folder size 
  - platform: folder
    folder: /config/backup/hass
  #Time that Home asisstant is Up and runing
  - platform: uptime
    name: Time Online
    
  #Current time and date formats 
  - platform: time_date
    display_options:
      - 'date_time'
      - 'time'
      - 'date'
  #Time in Days for SSL to Expired -made the cert with http://certbot.eff.org/ (Have SSL with NGINX)
  - platform: cert_expiry
    name: SSL HASS
    host: !secret base_url #For example google.com 
  - platform: cert_expiry
    name: SSL Router
    host: !secret AsusWrtSSL
  - platform: cert_expiry
    name: SSL IDE
    host: !secret c9IdeSSL #For example google.com 
  - platform: cert_expiry
    name: SSL Server
    host: !secret serverSSL
  - platform: cert_expiry
    name: SSL Cloud
    host: !secret CloudSSL
  #Travel time From Home to Work
  - platform: waze_travel_time
    name: Home To Adoraim
    origin: !secret HomeCoordinates
    destination: !secret Work1Coordinates
    region: 'IL'
  #Travel time From Home to Work2
  - platform: waze_travel_time
    name: Home To Otniel
    origin: !secret HomeCoordinates
    destination: !secret Work2Coordinates
    region: 'IL'
  #To track Time on entity in home (by logbook)
  - platform: history_stats
    name: Shiran at home yesterday
    entity_id: device_tracker.shiraniphone
    state: 'home'
    type: time
    end: '{{ now().replace(hour=2).replace(minute=0).replace(second=0) }}' #From 2 AM to 2AM
    duration:
      hours: 24
  - platform: history_stats
    name: Eliran at home yesterday
    entity_id: device_tracker.eliraniphone
    state: 'home'
    type: time
    end: '{{ now().replace(hour=2).replace(minute=0).replace(second=0) }}' #From 2 AM to 2AM
    duration:
      hours: 24
#############
##
## Boiler pow1 sensors (an Sonoff POW device)
##
#############
  - platform: mqtt
    name: "POW1 energy today"
    state_topic: "tele/sonoff1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Today"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "POW1 energy yesterday"
    state_topic: "tele/sonoff1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Yesterday"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "POW1 energy total"
    state_topic: "tele/sonoff1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Total"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "POW1 Watt"
    state_topic: "tele/sonoff1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    unit_of_measurement: "וואט" #W
  - platform: mqtt
    name: "POW1 Voltage"
    state_topic: "tele/sonoff1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Voltage"] }}'
    unit_of_measurement: "וולט" #V
  - platform: mqtt
    name: "POW1 Current"
    state_topic: "tele/sonoff1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Current"] }}'
    unit_of_measurement: "אמפר" #Amperes
  - platform: mqtt
    name: "POW1 total cost"
    state_topic: "tele/sonoff1/SENSOR"
    value_template: '{{ (value_json["ENERGY"]["Total"] * 0.5404) | round(3) }}'
    #ILS OR USD (Depends on local currency) Just change the value of "0.5404" to your local elctricity price
    unit_of_measurement: "₪" # USD / Other local currency

####Part of automation -boiler on/ off with input numbers#####   
####################################### boiler(POW1) on CLOCK #######################################
  - platform: template
    sensors:
      boiler_on_clock_hour:
        value_template: '{{ states.input_number.boiler_on_clock_hour.state | int }}'
      boiler_on_clock_minute:
        value_template: '{{ states.input_number.boiler_on_clock_minute.state | int }}'
      boiler_on_clock_time:
        value_template: >-
          {{ states.sensor.boiler_on_clock_hour.state }}:
          {%- if states.sensor.boiler_on_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.boiler_on_clock_minute.state }}
      boiler_on_clock_time_long:
        value_template: >-
          {% if states.sensor.boiler_on_clock_hour.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.boiler_on_clock_hour.state }}:
          {%- if states.sensor.boiler_on_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.boiler_on_clock_minute.state }}
####################################### boiler (POW1) OFF CLOCK #######################################
  - platform: template
    sensors:
      boiler_off_clock_hour:
        value_template: '{{ states.input_number.boiler_off_clock_hour.state | int }}'
      boiler_off_clock_minute:
        value_template: '{{ states.input_number.boiler_off_clock_minute.state | int }}'
      boiler_off_clock_time:
        value_template: >-
          {{ states.sensor.boiler_off_clock_hour.state }}:
          {%- if states.sensor.boiler_off_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.boiler_off_clock_minute.state }}
      boiler_off_clock_time_long:
        value_template: >-
          {% if states.sensor.boiler_off_clock_hour.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.boiler_off_clock_hour.state }}:
          {%- if states.sensor.boiler_off_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.boiler_off_clock_minute.state }}
###############END#########################

#############
##
##  POW2 sensors (an Sonoff POW device) - Currently an Switch for CCTV
##
#############
  - platform: mqtt
    name: "POW2 energy today"
    state_topic: "tele/sonoff2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Today"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "POW2 energy yesterday"
    state_topic: "tele/sonoff2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Yesterday"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "POW2 energy total"
    state_topic: "tele/sonoff2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Total"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "POW2 Watt"
    state_topic: "tele/sonoff2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    unit_of_measurement: "וואט" #W
  - platform: mqtt
    name: "POW2 Voltage"
    state_topic: "tele/sonoff2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Voltage"] }}'
    unit_of_measurement: "וולט" #V
  - platform: mqtt
    name: "POW2 Current"
    state_topic: "tele/sonoff2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Current"] }}'
    unit_of_measurement: "אמפר" #Amperes
  - platform: mqtt
    name: "POW2 total cost"
    state_topic: "tele/sonoff2/SENSOR"
    value_template: '{{ ( value_json["ENERGY"]["Total"] * 0.5404) | round(3) }}'
    #ILS OR USD (Depends on local currency) Just change the value of "0.5404" to your local elctricity price
    unit_of_measurement: "₪" # USD / Other local currency
    ########################################

    ##Add More info for device xiaomi PowerStrip
  - platform: template
    sensors:
      power_strip_temp:
        friendly_name: 'טמפרטורת מפצל' #power Strip Temperature
        value_template: '{{ states.switch.xiaomi_powerstrip.attributes.temperature }}'
        unit_of_measurement: "°מעלות" #temperature in C
      power_strip_watt:
        friendly_name: 'צריכה נוכחית ' #Current W
        value_template: '{{ states.switch.xiaomi_powerstrip.attributes.load_power }}'
        unit_of_measurement: W
      # power_strip_total_cost:
      #   friendly_name: 'עלות לשעת פעילות' #price per hour 
      #   value_template: '{{ (states.switch.xiaomi_powerstrip.attributes.load_power *0.5404 *0.001)| round(3)}}'
      #   #ILS OR USD (Depends on local currency) Just change the value of "0.5404" to your local elctricity price
      #   unit_of_measurement: "₪" # USD / Other local currency

    ####################################### ALARM CLOCK #######################################
    #alarm clock that send a notifaction to phone (via iOS app-see Automations)
  - platform: template
    sensors:
      alarm_clock_hour:
        value_template: '{{ states.input_number.alarm_clock_hour.state | int }}'
      alarm_clock_minute:
        value_template: '{{ states.input_number.alarm_clock_minute.state | int }}'
      alarm_clock_time:
        value_template: >-
          {{ states.sensor.alarm_clock_hour.state }}:
          {%- if states.sensor.alarm_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_minute.state }}
      alarm_clock_time_long:
        value_template: >-
          {% if states.sensor.alarm_clock_hour.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_hour.state }}:
          {%- if states.sensor.alarm_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_minute.state }}
    ####################################### End of ALARM CLOCK#######################################
    ####################################### Speedtest.Net ####################################### 
  - platform: speedtest
    server_id: 9034
    monitored_conditions:
      - ping
      - download
      - upload
    #######################################CURRENCIES Rates Via XML rate in Offical BANK OF ISRAEL#######################################
  - platform: command_line
    name: Exchange Date
    command: "curl get https://www.boi.org.il/currency.xml?curr=27 2>&1 | grep LAST_UPDATE | grep -o '[0-9]*-[0-9]*-[0-9]*' "
    scan_interval: 43200 #12 Hours

  - platform: command_line
    name: Dollar(USD)
    command: "curl get https://www.boi.org.il/currency.xml?curr=01 2>&1 | grep RATE | grep -o '[0-9].*[0-9]' "
    scan_interval: 43200 #12 Hours

  - platform: command_line
    name: Euro(EUR)
    command: "curl get https://www.boi.org.il/currency.xml?curr=27 2>&1 | grep RATE | grep -o '[0-9].*[0-9]' "
    scan_interval: 43200 #12 Hours

  - platform: command_line
    name: Pound(GBP)
    command: "curl get https://www.boi.org.il/currency.xml?curr=02 2>&1 | grep RATE | grep -o '[0-9].*[0-9]' "
    scan_interval: 43200 #12 Hours
    ###########################################################################
    
    ###### Latest config backup time
  - platform: command_line
    command: "bash /config/scripts/latest_Hass_backup.py"
    name: 'Latest HA Backup'
    scan_interval: 43200 #12 Hours
    
    ###HLINE CUI
  - platform: template
    sensors:
      hline_1:
        value_template: hline
      hline_2:
        value_template: hline
      hline_3:
        value_template: hline
      hline_4:
        value_template: hline
      hline_5:
        value_template: hline
      hline_6:
        value_template: hline
        
####################################### Temp and Hum From sensibo #######################################
  - platform: template
    sensors:
      sensibo1_temp:
        friendly_name: 'טמפרטורת סלון' #power Strip Temperature
        value_template: '{{ states.climate.living_room.attributes.current_temperature }}'
        unit_of_measurement: "°C" #"°מעלות" #temperature in C
      sensibo1_humidity:
        friendly_name: 'לחות סלון' #power Strip Temperature
        value_template: '{{ states.climate.living_room.attributes.current_humidity }}'
        unit_of_measurement: "%" 
        
        
####################################### https://sharethelove.io/xiaomi-vacuum-card #######################################        
  - platform: template
    sensors:
      vacuum_status:
        friendly_name: "Vacuum - Status"
        # value_template: "{{ states.vacuum.xiaomi_vacuum.attributes.status }}:מצב"
        value_template: >-
          {%if states.vacuum.xiaomi_vacuum.attributes.status == 'Charging' %}מצב:בטעינה
          {% elif states.vacuum.xiaomi_vacuum.attributes.status == 'Cleaning' %}מצב:מנקה
          {% elif states.vacuum.xiaomi_vacuum.attributes.status == 'Spot cleaning' %}מצב:מנקה נקודתי
          {% elif states.vacuum.xiaomi_vacuum.attributes.status == 'Returning home' %}מצב:בחזרה לבסיס
          {% elif states.vacuum.xiaomi_vacuum.attributes.status == 'Paused' %}מצב:בהשהייה
          {% elif states.vacuum.xiaomi_vacuum.attributes.status == 'Idle' %}מצב:לא פעיל
          {% elif states.vacuum.xiaomi_vacuum.attributes.status == 'Error' %}מצב:שגיאה,בדוק מה הסיבה באפליקציה          
          {% elif states.vacuum.xiaomi_vacuum.attributes.status == 'Charger disconnected' %}מצב:מטען מנותק          
          {%- else -%}
            {{states.vacuum.xiaomi_vacuum.attributes.status}}:מצב
          {% endif %}
  - platform: template
    sensors:
      vacuum_battery:
        friendly_name: "Vacuum - Battery"
        value_template: "{{ states.vacuum.xiaomi_vacuum.attributes.battery_level }}%:סוללה"
        device_class: battery
        # unit_of_measurement: '%'
        

################# A platform which allows you to get information sucessfull logins to Home Assistant ################# 
################# https://github.com/custom-components/sensor.authenticated ################# 
  - platform: authenticated
    # enable_notification: true #on by default
    

#################   https://sharethelove.io/cards/greeter-card  ################# 
  - platform: template
    sensors:
      time_of_day:
        value_template: >
          {% set current_hour = strptime(states('sensor.time'), "%H:%M").hour %}
          {% if current_hour < 12 %}
            בוקר טוב, אלירן
          {% elif 12 <= current_hour < 18 %}
            צהריים טובים, אלירן
          {% elif 18 <= current_hour < 23 %}
            ערב טוב, אלירן
          {% else %}
            לילה טוב, אלירן
          {% endif %}

  - platform: template
    sensors:
      greeter_card_info:
        value_template: > 
          פרטי:
          האירוע הבא {{ as_timestamp(states.calendar.icloudhome.attributes.start_time) | timestamp_custom('- %d/%m/%Y בשעה %H:%M') }}
  - platform: template
    sensors:
      greeter_card_info_2:
        value_template: > 
          עבודה:
          האירוע הבא {{ as_timestamp(states.calendar.work.attributes.start_time) | timestamp_custom('- %d/%m/%Y בשעה %H:%M') }}
  - platform: template
    sensors:
      outside_temp:
        friendly_name: "Outside Temperature"
        # unit_of_measurement: '°C'
        value_template: "{{ states.weather.yweather.attributes.temperature }}"
        icon_template: >
          {% if is_state("weather.yweather", "sunny") -%}
             mdi:weather-sunny
          {% elif is_state('weather.yweather', 'clear-night') -%}
             mdi:weather-night
          {% elif is_state('weather.yweather', 'rain') -%}
             mdi:weather-rainy
          {% elif is_state('weather.yweather', 'snow') -%}
             mdi:weather-snowy
          {% elif is_state('weather.yweather', 'sleet') -%}
             mdi:weather-snowy-rainy
          {% elif is_state('weather.yweather', 'wind') -%}
             mdi:weather-windy-variant
          {% elif is_state('weather.yweather', 'fog') -%}
             mdi:weather-fog
          {% elif is_state('weather.yweather', 'cloudy') -%}
             mdi:weather-cloudy
          {% elif is_state('weather.yweather', 'partly-cloudy-day') -%}
             mdi:weather-partlycloudy
          {% elif is_state('weather.yweather', 'hail') -%}
             mdi:weather-hail
          {% elif is_state('weather.yweather', 'thunderstorm') -%}
             mdi:weather-lightning
          {% else %}
             mdi:help-circle
          {% endif %}

        entity_picture_template: >
          {% if is_state("weather.yweather", "sunny") -%}
             /local/weather_icons/animated/day.svg
          {% elif is_state('weather.yweather', 'clear-night') -%}
             /local/weather_icons/animated/night.svg
          {% elif is_state('weather.yweather', 'rain') -%}
             /local/weather_icons/animated/rain.svg
          {% elif is_state('weather.yweather', 'snow') -%}
             /local/weather_icons/animated/snow.svg
          {% elif is_state('weather.yweather', 'sleet') -%}
             /local/weather_icons/animated/sleet.svg
          {% elif is_state('weather.yweather', 'wind') -%}
             /local/weather_icons/animated/wind.svg
          {% elif is_state('weather.yweather', 'fog') -%}
             /local/weather_icons/animated/fog.svg
          {% elif is_state('weather.yweather', 'cloudy') -%}
             /local/weather_icons/animated/cloudy.svg
          {% elif is_state('weather.yweather', 'partly-cloudy-day') -%}
             /local/weather_icons/animated/partly-cloudy-day-1.svg
          {% elif is_state('weather.yweather', 'hail') -%}
             /local/weather_icons/animated/hail.svg
          {% elif is_state('weather.yweather', 'thunderstorm') -%}
             /local/weather_icons/animated/thunderstorm.svg
          {% elif is_state('weather.yweather', 'hail') -%}
             /local/weather_icons/animated/rainy-7.svg
          {% elif is_state('weather.yweather', 'lightning') -%}
             /local/weather_icons/animated/thunder.svg
          {% elif is_state('weather.yweather', 'lightning-rainy') -%}
             /local/weather_icons/animated/thunder.svg
          {% elif is_state('weather.yweather', 'cloudy') -%}
             /local/weather_icons/animated/cloudy.svg
          {% elif is_state('weather.yweather', 'partlycloudy') -%}
             /local/weather_icons/animated/cloudy.svg
          {% elif is_state('weather.yweather', 'pouring') -%}
             /local/weather_icons/animated/rainy-6.svg
          {% elif is_state('weather.yweather', 'rainy') -%}
             /local/weather_icons/animated/rainy-6.svg
          {% elif is_state('weather.yweather', 'snowy') -%}
             /local/weather_icons/animated/snowy-6.svg
          {% elif is_state('weather.yweather', 'snowy-rainy') -%}
             /local/weather_icons/animated/rainy-6.svg
          {% elif is_state('weather.yweather', 'windy') -%}
             /local/weather_icons/animated/cloudy.svg
          {% else %}
             /local/weather_icons/animated/help.svg
          {% endif %}

  - platform: command_line
    name: IMSWeather
    command: " curl get http://www.ims.gov.il/ims/rss/beer_sheva.xml 2>&1 | grep -ni .*title=  | grep -o [א-ת]* "
    scan_interval: 43200 #12 Hours    
    # command: "echo 'התחזית להיום: '; curl get http://www.ims.gov.il/ims/rss/beer_sheva.xml 2>&1 | grep -ni .*title=  | grep -o [א-ת]* "

  - platform: template
    sensors:
      authentication_known_ip_info:
        value_template: >-
          {% if is_state('sensor.last_successful_authenticationrature.attributes.new_ip', 'true') %}
            כן
          {% else %}
            לא
          {% endif %}
          
  - platform: command_line
    name: 'CPU temp'
    unit_of_measurement: "°מעלות" #temperature in C "°C"
    scan_interval: 120 #2 min
    command: "cat /sys/class/thermal/thermal_zone2/temp"
    value_template: '{{ (value | multiply(0.001)) | round(1) }}'
    
  - platform: command_line
    name: 'HDD_sdb_temp'
    unit_of_measurement: "°מעלות" #temperature in C "°C"
    scan_interval: 120 #2 min
    command: "hddtemp -n /dev/sdb"
    
  - platform: command_line
    name: 'HDD_sdc_temp'
    unit_of_measurement: "°מעלות" #temperature in C "°C"
    scan_interval: 120 #2 min
    command: "hddtemp -n /dev/sdc"
    
  - platform: command_line
    name: 'HDD_sdd_temp'
    unit_of_measurement: "°מעלות" #temperature in C "°C"
    scan_interval: 120 #2 min
    command: "hddtemp -n /dev/sdd"

  - platform: command_line
    name: 'HDD_sde_temp'
    unit_of_measurement: "°מעלות" #temperature in C "°C"
    scan_interval: 120 #2 min
    command: "hddtemp -n /dev/sde"
    
  #https://github.com/custom-components/sensor.geoip  
  - platform: geoip
  
  - platform: broadlink
    update_interval: 60
    host: 192.168.1.80
    mac: '78:0F:77:18:19:DF'
    name: RMPro

  # - platform: command_line #working good in ubuntu  - not working on Docker
  #   command: "bash /config/scripts/GetCPUTemp.sh"
  #   name: 'CPU temp'
  #   unit_of_measurement: "°מעלות" #temperature in C
  #   scan_interval: 120 #2 min
  # - platform: command_line #working good in ubuntu  - not working on Docker
  #   command: "bash /config/scripts/GetGPUTemp.sh"
  #   name: 'GPU temp'
  #   unit_of_measurement: "°מעלות" #temperature in C
  #   scan_interval: 120 #2 min